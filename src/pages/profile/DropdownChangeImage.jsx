import { useState } from "react";
import {
  Menu,
  MenuItem,
  IconButton,
  Dialog,
  DialogActions,
  DialogTitle,
  Button,
} from "@mui/material";
import { ChevronDownIcon, UserCircleIcon } from "@heroicons/react/24/solid";
import { PhotoAlbum } from "@mui/icons-material";
import { editUserImage } from "../../service/user";
import { useAuth } from "../../components/context/AuthProvider";
import { toast } from "react-toastify";
const DropdownChangeImage = () => {
  const { profile, setProfile } = useAuth(); // L·∫•y d·ªØ li·ªáu user t·ª´ AuthProvider
  const [anchorEl, setAnchorEl] = useState(null);
  const [openDialog, setOpenDialog] = useState(false);
  const [changeType, setChangeType] = useState(null); // "avatar" ho·∫∑c "coverPhoto"
  const [selectedFile, setSelectedFile] = useState(null);
  const [loading, setLoading] = useState(false);

  const openMenu = (event) => setAnchorEl(event.currentTarget);
  const closeMenu = () => setAnchorEl(null);
  const openConfirmDialog = (type) => {
    setChangeType(type);
    setOpenDialog(true);
    closeMenu();
  };
  const closeDialog = () => {
    setOpenDialog(false);
    setSelectedFile(null);
  };

  const handleFileChange = (event) => {
    setSelectedFile(event.target.files[0]);
  };

  const handleUpload = async () => {
    if (!selectedFile) return alert("Vui l√≤ng ch·ªçn m·ªôt file!");
    setLoading(true);

    const formData = new FormData();
    formData.append(changeType, selectedFile); // "avatar" ho·∫∑c "coverPhoto"

    try {
      const response = await editUserImage(formData);
      if (response.status === 200) { 
        toast.success("C·∫≠p nh·∫≠t th√†nh c√¥ng! üéâ");
        // ‚úÖ C·∫≠p nh·∫≠t l·∫°i profile trong AuthProvider v·ªõi d·ªØ li·ªáu m·ªõi t·ª´ server
        setProfile((prev) => ({
          ...prev,
          avatar: response?.data?.avatar ?? prev.avatar,
          coverPhoto: response?.data?.coverPhoto ?? prev.coverPhoto,
        }));
        console.log(profile);
      }
    } catch (error) {
      console.error("L·ªói khi c·∫≠p nh·∫≠t:", error); 
      toast.error("C·∫≠p nh·∫≠t th·∫•t b·∫°i!");
    } finally {
      setLoading(false);
      closeDialog();
    }
  };

  return (
    <div className="relative inline-block">
      {/* N√∫t m·ªü dropdown */}
      <IconButton
        onClick={openMenu}
        className="bg-gray-50 hover:bg-violet-50 rounded-md"
      >
        <ChevronDownIcon className="w-8 h-8 text-gray-500 hover:scale-125 hover:text-violet-400" />
      </IconButton>

      {/* Dropdown Menu */}
      <Menu anchorEl={anchorEl} open={Boolean(anchorEl)} onClose={closeMenu}>
        <MenuItem onClick={() => openConfirmDialog("coverPhoto")}>
          <PhotoAlbum className="text-violet-500" />
          <span className="ml-2">ƒê·ªïi ·∫£nh n·ªÅn</span>
        </MenuItem>
        <MenuItem onClick={() => openConfirmDialog("avatar")}>
          <UserCircleIcon className="w-6 h-6 text-violet-500" />
          <span className="ml-2">ƒê·ªïi avatar</span>
        </MenuItem>
      </Menu>

      {/* Dialog x√°c nh·∫≠n ƒë·ªïi ·∫£nh */}
      <Dialog open={openDialog} onClose={closeDialog}>
        <DialogTitle>
          B·∫°n c√≥ ch·∫Øc mu·ªën thay ƒë·ªïi{" "}
          {changeType === "avatar" ? "avatar" : "·∫£nh n·ªÅn"}?
        </DialogTitle>
        <input
          type="file"
          accept="image/*"
          onChange={handleFileChange}
          className="p-4"
        />
        <DialogActions>
          <Button onClick={closeDialog} color="secondary">
            H·ªßy
          </Button>
          <Button
            onClick={handleUpload}
            color="primary"
            disabled={!selectedFile || loading}
          >
            {loading ? "ƒêang t·∫£i..." : "X√°c nh·∫≠n"}
          </Button>
        </DialogActions>
      </Dialog>
    </div>
  );
};

export default DropdownChangeImage;
